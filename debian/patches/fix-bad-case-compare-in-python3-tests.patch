Description: Fix bad case compare in Python3 tests
Author: Thomas Goirand <zigo@debian.org>
Forwarded: no
Last-Update: 2015-10-06

--- python-falcon-0.3.0.orig/tests/test_cookies.py
+++ python-falcon-0.3.0/tests/test_cookies.py
@@ -1,6 +1,7 @@
 
 import falcon
 import falcon.testing as testing
+import six
 
 from falcon.util import TimezoneGMT
 from datetime import datetime, timedelta, tzinfo
@@ -54,18 +55,29 @@ class TestCookies(testing.TestBase):
         self.resource = CookieResource()
         self.api.add_route(self.test_route, self.resource)
         self.simulate_request(self.test_route, method="GET")
-        self.assertIn(
-            ("set-cookie",
-                "foo=bar; Domain=example.com; httponly; Path=/; secure"),
-            self.srmock.headers)
+        try:
+            self.assertIn(
+                ("set-cookie",
+                    "foo=bar; Domain=example.com; HttpOnly; Path=/; Secure"),
+                self.srmock.headers)
+        except:
+            self.assertIn(
+                ("set-cookie",
+                    "foo=bar; Domain=example.com; httponly; Path=/; secure"),
+                self.srmock.headers)
 
     def test_response_complex_case(self):
         self.resource = CookieResource()
         self.api.add_route(self.test_route, self.resource)
         self.simulate_request(self.test_route, method="HEAD")
-        self.assertIn(("set-cookie", "foo=bar; httponly; Max-Age=300; secure"),
-                      self.srmock.headers)
-        self.assertIn(("set-cookie", "bar=baz; secure"), self.srmock.headers)
+        try:
+            self.assertIn(("set-cookie", "foo=bar; HttpOnly; Max-Age=300; Secure"),
+                          self.srmock.headers)
+            self.assertIn(("set-cookie", "bar=baz; Secure"), self.srmock.headers)
+        except:
+            self.assertIn(("set-cookie", "foo=bar; httponly; Max-Age=300; secure"),
+                          self.srmock.headers)
+            self.assertIn(("set-cookie", "bar=baz; secure"), self.srmock.headers)
         self.assertNotIn(("set-cookie", "bad=cookie"), self.srmock.headers)
 
     def test_cookie_expires_naive(self):
